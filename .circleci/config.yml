# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

commands:
  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack

jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file instance.yml \
              --stack-name myStack \
              --region us-east-1
      - run: return 1
      - destroy_environment

  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["e1:d2:88:c8:07:24:57:a3:11:02:52:97:e6:94:9a:1c"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml
  # Exercise: Smoke Testing
  #smoke_test:
    #docker:
      #- image: alpine:latest
    #steps:
      #- run: apk add --update curl
      #- run:
          #name: smoke test
          #command: |
            #URL="https://blog.udacity.com/"
            # Test if website exists
            #if curl -s --head ${URL} 
            #then
              #return 0
            #else
              #return 1
            #fi

  # Exercise: Smoke Testing
  #smoke_test:
  #docker:
    #- image: alpine:latest
  #steps:
    #- run:
        #name: Test job
        # Fail the job intentionally to simulate an error.
        #command:  return 1
    #- destroy_environment  

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  my_workflow:
      jobs:
        - create_infrastructure
        #- configure_infrastructure
        #- smoke_test
        